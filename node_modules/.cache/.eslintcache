[{"C:\\Users\\Nikita\\Desktop\\I-must-be-reach\\it-incubator\\hws2-master\\src\\index.tsx":"1","C:\\Users\\Nikita\\Desktop\\I-must-be-reach\\it-incubator\\hws2-master\\src\\reportWebVitals.ts":"2","C:\\Users\\Nikita\\Desktop\\I-must-be-reach\\it-incubator\\hws2-master\\src\\s1-main\\App.tsx":"3","C:\\Users\\Nikita\\Desktop\\I-must-be-reach\\it-incubator\\hws2-master\\src\\s2-homeworks\\hw10\\bll\\store.ts":"4","C:\\Users\\Nikita\\Desktop\\I-must-be-reach\\it-incubator\\hws2-master\\src\\s2-homeworks\\hw01\\HW1.tsx":"5","C:\\Users\\Nikita\\Desktop\\I-must-be-reach\\it-incubator\\hws2-master\\src\\s2-homeworks\\hw10\\bll\\loadingReducer.ts":"6","C:\\Users\\Nikita\\Desktop\\I-must-be-reach\\it-incubator\\hws2-master\\src\\s2-homeworks\\hw12\\bll\\themeReducer.ts":"7","C:\\Users\\Nikita\\Desktop\\I-must-be-reach\\it-incubator\\hws2-master\\src\\s2-homeworks\\hw01\\message\\Message.tsx":"8","C:\\Users\\Nikita\\Desktop\\I-must-be-reach\\it-incubator\\hws2-master\\src\\s2-homeworks\\hw01\\message-sender\\MessageSender.tsx":"9","C:\\Users\\Nikita\\Desktop\\I-must-be-reach\\it-incubator\\hws2-master\\src\\s2-homeworks\\hw01\\friend-message\\FriendMessage.tsx":"10"},{"size":730,"mtime":1667227969000,"results":"11","hashOfConfig":"12"},{"size":504,"mtime":1667227969000,"results":"13","hashOfConfig":"12"},{"size":589,"mtime":1667227969000,"results":"14","hashOfConfig":"12"},{"size":541,"mtime":1667227969000,"results":"15","hashOfConfig":"12"},{"size":2331,"mtime":1668156744023,"results":"16","hashOfConfig":"12"},{"size":458,"mtime":1667227969000,"results":"17","hashOfConfig":"12"},{"size":320,"mtime":1667227969000,"results":"18","hashOfConfig":"12"},{"size":1269,"mtime":1668157124114,"results":"19","hashOfConfig":"12"},{"size":2307,"mtime":1667227969000,"results":"20","hashOfConfig":"12"},{"size":1573,"mtime":1668157096516,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1qrwhka",{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},"C:\\Users\\Nikita\\Desktop\\I-must-be-reach\\it-incubator\\hws2-master\\src\\index.tsx",[],[],"C:\\Users\\Nikita\\Desktop\\I-must-be-reach\\it-incubator\\hws2-master\\src\\reportWebVitals.ts",[],[],"C:\\Users\\Nikita\\Desktop\\I-must-be-reach\\it-incubator\\hws2-master\\src\\s1-main\\App.tsx",[],[],"C:\\Users\\Nikita\\Desktop\\I-must-be-reach\\it-incubator\\hws2-master\\src\\s2-homeworks\\hw10\\bll\\store.ts",[],[],"C:\\Users\\Nikita\\Desktop\\I-must-be-reach\\it-incubator\\hws2-master\\src\\s2-homeworks\\hw01\\HW1.tsx",[],[],"C:\\Users\\Nikita\\Desktop\\I-must-be-reach\\it-incubator\\hws2-master\\src\\s2-homeworks\\hw10\\bll\\loadingReducer.ts",[],[],"C:\\Users\\Nikita\\Desktop\\I-must-be-reach\\it-incubator\\hws2-master\\src\\s2-homeworks\\hw12\\bll\\themeReducer.ts",[],[],"C:\\Users\\Nikita\\Desktop\\I-must-be-reach\\it-incubator\\hws2-master\\src\\s2-homeworks\\hw01\\message\\Message.tsx",["54","55"],[],"import React from 'react'\nimport s from './Message.module.css'\nimport {message0, MessageType} from \"../HW1\";\n\n// нужно создать правильный тип вместо any\nexport type MessagePropsType = {\n    message: MessageType,\n}\n\n// нужно отобразить приходящие данные\nconst Message = (props: MessagePropsType) => {\n    return (\n        <div id={'hw1-message-' + props.message.id} className={s.message}>\n            <div className={s.imageAndText}>\n                <img\n                    id={'hw1-avatar-' + props.message.id}\n                    src={props.message.user.avatar}\n                    />\n                <div className={s.text}>\n                    <div id={'hw1-name-' + props.message.id} className={s.name}>\n                        <h1>{props.message.user.name}</h1>\n                    </div>\n                    <pre id={'hw1-text-' + props.message.id} className={s.messageText}>\n                        <p>{props.message.message.text}</p>\n\n\n                    </pre>\n                </div>\n            </div>\n            <div id={'hw1-time-' + props.message.id} className={s.time}>\n\n                <p>{props.message.message.time}</p>\n\n            </div>\n        </div>\n    )\n}\n\nexport default Message\n","C:\\Users\\Nikita\\Desktop\\I-must-be-reach\\it-incubator\\hws2-master\\src\\s2-homeworks\\hw01\\message-sender\\MessageSender.tsx",[],[],"C:\\Users\\Nikita\\Desktop\\I-must-be-reach\\it-incubator\\hws2-master\\src\\s2-homeworks\\hw01\\friend-message\\FriendMessage.tsx",["56"],[],"import React from 'react'\nimport s from './FriendMessage.module.css'\n\n// создать тип вместо any и отобразить приходящие данные\nconst FriendMessage = (props: any) => {\n    return (\n        <div\n            id={'hw1-friend-message-' + props.message.id}\n            className={s.friendMessage}\n        >\n            <div className={s.friendImageAndText}>\n                <img\n                    id={'hw1-friend-avatar-' + props.message.id}\n                    src = {props.message.user.avatar}\n                />\n                <div className={s.friendText}>\n                    <div\n                        id={'hw1-friend-name-' + props.message.id}\n                        className={s.friendName}\n                    >\n                        <h1>{props.message.user.name}</h1>\n\n\n                    </div>\n                    <pre\n                        id={'hw1-friend-text-' + props.message.id}\n                        className={s.friendMessageText}\n                    >\n                        {/*создаёт студент*/}\n                        <p>{props.message.message.text}</p>\n\n                        {/**/}\n                    </pre>\n                </div>\n            </div>\n            <div\n                id={'hw1-friend-time-' + props.message.id}\n                className={s.friendTime}\n            >\n                {/*создаёт студент*/}\n                <p>{props.message.message.time}</p>\n                {/**/}\n            </div>\n        </div>\n    )\n}\n\nexport default FriendMessage\n",{"ruleId":"57","severity":1,"message":"58","line":3,"column":9,"nodeType":"59","messageId":"60","endLine":3,"endColumn":17},{"ruleId":"61","severity":1,"message":"62","line":15,"column":17,"nodeType":"63","endLine":18,"endColumn":23},{"ruleId":"61","severity":1,"message":"62","line":12,"column":17,"nodeType":"63","endLine":15,"endColumn":19},"@typescript-eslint/no-unused-vars","'message0' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement"]